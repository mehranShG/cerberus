var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.333,1,1.333]],["body/modules/AppModule.html",[0,1.722,1,2.312,2,1.048,3,1.449,4,1.822,5,1.822,6,1.946,7,0.066,8,2.063,9,1.492,10,1.492,11,0.621,12,0.621,13,0.512,14,2.323,15,2.52,16,1.062,17,1.048,18,2.323,19,1.822,20,1.822,21,1.245,22,2.323,23,2.323,24,2.323,25,2.52,26,2.323,27,0.621,28,2.323,29,2.323,30,2.323,31,2.323,32,2.323,33,1.492,34,2.323,35,1.245,36,2.323,37,2.323,38,2.323,39,1.245,40,2.323,41,2.323,42,1.492,43,1.822,44,0.621,45,0.242,46,0.043,47,0.043]],["title/controllers/AuthController.html",[48,1.333,49,1.333]],["body/controllers/AuthController.html",[7,0.066,11,0.463,12,0.463,13,0.381,16,1.043,17,0.781,27,0.694,42,1.112,44,0.463,45,0.181,46,0.035,47,0.035,48,0.928,49,1.393,50,1.358,51,1.731,52,1.112,53,0.463,54,2.038,55,3.467,56,2.446,57,2.719,58,1.407,59,3.12,60,2.599,61,1.731,62,1.187,63,1.731,64,2.446,65,2.505,66,1.358,67,1.76,68,1.731,69,1.731,70,2.038,71,2.038,72,2.038,73,1.358,74,1.76,75,1.668,76,1.731,77,1.731,78,1.358,79,1.358,80,0.659,81,1.112,82,1.731,83,1.731,84,3.467,85,1.731,86,0.928,87,1.187,88,1.358,89,1.731,90,1.731,91,1.731,92,1.358,93,3.12,94,0.781,95,1.731,96,1.731,97,2.446,98,1.731,99,1.731,100,1.731,101,1.731,102,1.731,103,1.731]],["title/entities/AuthEntity.html",[104,1.122,105,0.946]],["body/entities/AuthEntity.html",[7,0.065,11,0.561,12,0.561,13,0.462,16,0.799,27,1.015,35,1.868,39,1.124,44,0.561,45,0.219,46,0.04,47,0.04,53,0.561,58,1.714,62,1.446,65,1.347,104,1.349,105,1.138,106,1.645,107,1.138,108,2.733,109,2.733,110,2.733,111,2.98,112,2.733,113,2.098,114,2.345,115,2.733,116,2.098,117,1.868,118,2.733,119,2.098,120,2.733,121,2.098,122,1.92,123,2.991,124,2.991,125,1.124,126,1.645,127,2.098,128,1.645,129,2.991,130,2.345,131,2.098,132,2.991,133,2.098]],["title/modules/AuthModule.html",[0,1.333,6,1.122]],["body/modules/AuthModule.html",[0,1.788,2,1.108,3,1.505,6,1.979,7,0.066,8,2.143,9,1.576,10,1.576,11,0.656,12,0.656,13,0.541,15,1.925,16,1.172,17,1.108,20,1.925,21,1.316,42,2.143,43,2.617,44,0.656,45,0.256,46,0.045,47,0.045,49,2.032,80,0.934,81,1.576,87,1.67,88,1.925,105,1.27,134,1.925,135,1.925,136,2.455,137,1.925,138,2.455,139,2.455]],["title/injectables/AuthService.html",[87,0.946,140,1.333]],["body/injectables/AuthService.html",[7,0.066,11,0.375,12,0.375,13,0.309,16,1.04,17,0.633,21,0.752,27,0.731,44,0.375,45,0.146,46,0.03,47,0.03,52,1.42,53,0.375,54,1.735,56,1.735,57,1.735,62,1.182,64,2.146,65,2.304,66,1.735,67,1.524,70,2.146,71,2.146,72,2.146,73,1.735,74,1.524,75,1.994,78,1.101,79,1.101,80,0.842,81,0.902,87,0.842,92,1.735,94,0.633,97,2.146,105,0.842,122,1.42,125,0.752,126,3.139,128,2.814,130,2.435,137,1.101,140,1.185,141,1.404,142,1.101,143,3.105,144,2.212,145,1.404,146,3.755,147,2.737,148,1.404,149,2.212,150,1.404,151,1.404,152,1.404,153,2.212,154,2.212,155,1.404,156,1.404,157,2.212,158,1.404,159,1.404,160,1.404,161,1.404,162,1.404,163,1.404,164,1.404,165,1.404,166,2.212,167,1.404,168,2.737,169,1.404,170,0.633,171,1.404,172,2.212,173,2.212,174,1.404,175,2.212,176,1.404,177,1.404,178,1.404]],["title/classes/LoginDto.html",[45,0.259,67,1.122]],["body/classes/LoginDto.html",[7,0.065,11,0.711,12,0.711,13,0.586,16,0.941,27,0.941,35,2.116,44,0.711,45,0.367,46,0.047,47,0.047,53,0.711,58,1.589,62,1.34,67,1.589,86,1.426,107,1.34,117,2.252,170,1.781,179,1.709,180,2.087,181,2.087,182,2.661,183,2.661,184,2.661,185,2.762,186,2.762,187,1.709,188,3.096]],["title/classes/RegisterDto.html",[45,0.259,74,1.122]],["body/classes/RegisterDto.html",[7,0.065,11,0.544,12,0.544,13,0.448,16,0.782,27,0.916,33,2.549,35,2.127,44,0.544,45,0.305,46,0.039,47,0.039,53,0.544,58,1.546,62,1.304,74,1.32,86,1.091,107,1.114,117,2.215,170,1.546,179,1.307,181,1.596,185,2.295,186,2.687,187,1.307,188,2.938,189,1.596,190,2.035,191,2.035,192,3.747,193,3.747,194,2.926,195,2.926,196,2.926,197,2.926,198,2.926,199,2.035,200,2.035,201,2.926,202,2.926,203,2.035,204,2.035,205,2.035,206,2.035,207,2.926,208,2.926,209,2.035,210,2.035]],["title/entities/UserEntity.html",[80,0.946,104,1.122]],["body/entities/UserEntity.html",[7,0.065,11,0.503,12,0.503,13,0.414,16,0.739,25,2.57,27,1.075,33,2.104,39,1.009,44,0.503,45,0.196,46,0.037,47,0.037,52,2.104,53,0.503,58,1.815,62,1.531,80,1.052,94,1.247,104,1.247,105,1.374,107,1.052,108,2.57,109,2.57,110,2.57,111,2.832,112,2.57,114,2.168,115,2.57,117,1.936,118,3.017,120,2.57,125,1.009,170,1.478,211,1.476,212,1.882,213,2.765,214,2.765,215,2.765,216,1.882,217,1.882,218,1.882,219,1.882,220,1.882,221,1.882,222,1.882,223,2.765,224,2.765,225,1.882]],["title/coverage.html",[226,2.161]],["body/coverage.html",[7,0.063,13,0.596,27,0.723,45,0.371,46,0.048,47,0.048,48,1.45,49,1.45,50,2.122,67,1.221,74,1.221,75,1.738,80,1.03,87,1.03,104,1.607,105,1.03,106,2.122,140,1.45,142,2.122,180,2.122,189,2.122,211,2.122,226,1.738,227,2.707,228,2.707,229,2.707,230,4.6,231,3.562,232,2.707,233,2.707,234,3.981,235,2.122,236,2.707,237,2.122,238,2.707,239,2.707]],["title/dependencies.html",[3,1.346,240,1.639]],["body/dependencies.html",[3,1.221,7,0.066,17,1.221,19,2.122,21,1.45,45,0.371,46,0.048,47,0.048,86,1.45,122,1.738,125,1.45,187,1.738,241,3.981,242,2.707,243,2.707,244,2.707,245,2.707,246,2.707,247,2.707,248,2.707,249,2.707,250,2.707,251,2.707,252,2.707,253,2.707,254,2.707,255,2.707,256,2.707,257,2.707,258,2.707,259,2.707,260,2.707,261,2.707,262,2.707,263,2.707]],["title/miscellaneous/functions.html",[264,1.639,265,2.34]],["body/miscellaneous/functions.html",[7,0.057,46,0.057,47,0.057,53,0.958,235,2.81,237,3.548,264,2.81,265,2.81,266,3.583]],["title/index.html",[53,0.559,267,2.09,268,2.09]],["body/index.html",[7,0.065,46,0.045,47,0.045,94,1.131,170,1.131,226,1.61,269,2.507,270,1.966,271,1.966,272,1.966,273,2.507,274,2.507,275,2.507,276,4.513,277,2.507,278,3.384,279,3.384,280,2.507,281,2.507,282,2.507,283,2.507,284,2.507,285,4.415,286,2.507,287,2.507,288,3.384,289,2.507,290,2.507,291,2.507,292,2.507,293,3.384,294,3.384,295,2.507,296,2.507,297,2.507,298,1.966,299,1.966,300,1.966,301,2.507]],["title/modules.html",[2,1.519]],["body/modules.html",[1,1.878,2,1.581,6,1.581,7,0.056,46,0.056,47,0.056,302,4.189,303,4.189,304,4.189,305,4.189]],["title/overview.html",[306,2.64]],["body/overview.html",[1,2.351,2,1.343,3,1.709,4,2.335,5,2.335,6,2.043,7,0.059,8,2.433,9,1.912,10,1.912,39,1.596,46,0.051,47,0.051,48,1.596,87,1.586,134,2.335,135,2.335,140,1.596,179,1.912,306,2.335,307,4.167,308,3.789]],["title/properties.html",[107,1.135,240,1.639]],["body/properties.html",[7,0.064,46,0.055,47,0.055,94,1.525,107,1.286,270,2.65,271,2.65,272,2.65,298,2.65,299,2.65,300,2.65,309,3.38,310,3.38,311,3.38,312,3.38]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":230,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":310,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":253,"title":{},"body":{"dependencies.html":{}}}],["0.3.11",{"_index":263,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":252,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":234,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":233,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":231,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":232,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":308,"title":{},"body":{"overview.html":{}}}],["2",{"_index":307,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":255,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":260,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":248,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":262,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":280,"title":{},"body":{"index.html":{}}}],["api",{"_index":272,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apioperation",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation({summary",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":188,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isemail",{"_index":181,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isstring",{"_index":183,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@minlength(4)@maxlength(20)@matches(/(?=.*[a",{"_index":191,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@minlength(4)@maxlength(20)@matches(/^[a",{"_index":200,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apitags",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('authentication",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":283,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":126,"title":{},"body":{"entities/AuthEntity.html":{},"injectables/AuthService.html":{}}}],["atleast",{"_index":195,"title":{},"body":{"classes/RegisterDto.html":{}}}],["auth",{"_index":52,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/UserEntity.html":{}}}],["auth.controller",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.entity",{"_index":225,"title":{},"body":{"entities/UserEntity.html":{}}}],["auth.password",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.service",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":49,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":271,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authentity",{"_index":105,"title":{"entities/AuthEntity.html":{}},"body":{"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["authmodule",{"_index":6,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":298,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authrepository",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":87,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":130,"title":{},"body":{"entities/AuthEntity.html":{},"injectables/AuthService.html":{}}}],["bcrypt",{"_index":122,"title":{},"body":{"entities/AuthEntity.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":131,"title":{},"body":{"entities/AuthEntity.html":{}}}],["bcrypt.hash(password",{"_index":133,"title":{},"body":{"entities/AuthEntity.html":{}}}],["beforeinsert",{"_index":123,"title":{},"body":{"entities/AuthEntity.html":{}}}],["beforeupdate",{"_index":124,"title":{},"body":{"entities/AuthEntity.html":{}}}],["body",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["bootstrap",{"_index":237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":305,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":302,"title":{},"body":{"modules.html":{}}}],["capital",{"_index":197,"title":{},"body":{"classes/RegisterDto.html":{}}}],["cascade",{"_index":215,"title":{},"body":{"entities/UserEntity.html":{}}}],["cerberus",{"_index":269,"title":{},"body":{"index.html":{}}}],["class",{"_index":45,"title":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":179,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["column",{"_index":118,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["comparepassword",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":18,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":128,"title":{},"body":{"entities/AuthEntity.html":{},"injectables/AuthService.html":{}}}],["constructor",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["constructor(userrepository",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["contain",{"_index":194,"title":{},"body":{"classes/RegisterDto.html":{}}}],["controller",{"_index":48,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('auth",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["coverage",{"_index":226,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created_at",{"_index":108,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn",{"_index":112,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["database",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":111,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["defined",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":270,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":284,"title":{},"body":{"index.html":{}}}],["digits",{"_index":202,"title":{},"body":{"classes/RegisterDto.html":{}}}],["dist/**/*.entity.js",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":227,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":295,"title":{},"body":{"index.html":{}}}],["eager",{"_index":214,"title":{},"body":{"entities/UserEntity.html":{}}}],["email",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"index.html":{}}}],["entities",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"entities/AuthEntity.html":{},"entities/UserEntity.html":{},"overview.html":{}}}],["entity",{"_index":104,"title":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["env",{"_index":279,"title":{},"body":{"index.html":{}}}],["example",{"_index":278,"title":{},"body":{"index.html":{}}}],["existing",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{}}}],["export",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["express",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["files",{"_index":281,"title":{},"body":{"index.html":{}}}],["finduser",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["finduser.auth.password",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":274,"title":{},"body":{"index.html":{}}}],["function",{"_index":236,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":265,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getall",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallusers",{"_index":55,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":267,"title":{"index.html":{}},"body":{}}],["hashedpassword",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword(password",{"_index":127,"title":{},"body":{"entities/AuthEntity.html":{}}}],["host",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":109,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["identifier",{"_index":228,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["imports",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":53,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["injectable",{"_index":140,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectrepository",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectrepository(authentity",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectrepository(userentity",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["installation",{"_index":275,"title":{},"body":{"index.html":{}}}],["installremove",{"_index":277,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":185,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isglobal",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["isstring",{"_index":186,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["joincolumn",{"_index":223,"title":{},"body":{"entities/UserEntity.html":{}}}],["letter",{"_index":198,"title":{},"body":{"classes/RegisterDto.html":{}}}],["license",{"_index":311,"title":{},"body":{"properties.html":{}}}],["login",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login'})@post('login",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":67,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.email",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto.password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["matches",{"_index":204,"title":{},"body":{"classes/RegisterDto.html":{}}}],["matches(/(?=.*[a",{"_index":210,"title":{},"body":{"classes/RegisterDto.html":{}}}],["matches(/^[a",{"_index":209,"title":{},"body":{"classes/RegisterDto.html":{}}}],["matching",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["maxlength",{"_index":205,"title":{},"body":{"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":208,"title":{},"body":{"classes/RegisterDto.html":{}}}],["mehran",{"_index":299,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mehranfmpx@gmail.com",{"_index":301,"title":{},"body":{"index.html":{}}}],["message",{"_index":193,"title":{},"body":{"classes/RegisterDto.html":{}}}],["metadata",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":54,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["minlength",{"_index":206,"title":{},"body":{"classes/RegisterDto.html":{}}}],["minlength(4",{"_index":207,"title":{},"body":{"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":264,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mode",{"_index":288,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["mysql",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":254,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["nest",{"_index":273,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["new",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["notfoundexception",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":276,"title":{},"body":{"index.html":{}}}],["number",{"_index":114,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["one",{"_index":196,"title":{},"body":{"classes/RegisterDto.html":{}}}],["onetoone",{"_index":224,"title":{},"body":{"entities/UserEntity.html":{}}}],["onetoone(undefined",{"_index":212,"title":{},"body":{"entities/UserEntity.html":{}}}],["optional",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["out",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["overview",{"_index":306,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":240,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["parseint(process.env.db_port",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["password",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"entities/AuthEntity.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["port",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":51,"title":{},"body":{"controllers/AuthController.html":{}}}],["primarygeneratedcolumn",{"_index":115,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.db_database",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":290,"title":{},"body":{"index.html":{}}}],["promise",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"injectables/AuthService.html":{}}}],["properties",{"_index":107,"title":{"properties.html":{}},"body":{"entities/AuthEntity.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"properties.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["readonly",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["reflect",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":74,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerdto.password",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerdto.username",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["repository",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["result",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["returns",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["rimraf",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":285,"title":{},"body":{"index.html":{}}}],["running",{"_index":282,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":261,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":129,"title":{},"body":{"entities/AuthEntity.html":{}}}],["shahbaz",{"_index":300,"title":{},"body":{"index.html":{},"properties.html":{}}}],["source",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["src/.../main.ts",{"_index":266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":14,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":50,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:27",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:48",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/dtos/login.dto",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["src/dtos/login.dto.ts",{"_index":180,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/dtos/login.dto.ts:11",{"_index":184,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/dtos/login.dto.ts:7",{"_index":182,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/dtos/register.dto",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["src/dtos/register.dto.ts",{"_index":189,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/dtos/register.dto.ts:14",{"_index":203,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/dtos/register.dto.ts:23",{"_index":199,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/dtos/register.dto.ts:7",{"_index":190,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/entities/auth.entity",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["src/entities/auth.entity.ts",{"_index":106,"title":{},"body":{"entities/AuthEntity.html":{},"coverage.html":{}}}],["src/entities/auth.entity.ts:10",{"_index":116,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:13",{"_index":119,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:16",{"_index":113,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/auth.entity.ts:19",{"_index":121,"title":{},"body":{"entities/AuthEntity.html":{}}}],["src/entities/user.entity",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["src/entities/user.entity.ts",{"_index":211,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/entities/user.entity.ts:12",{"_index":219,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/entities/user.entity.ts:15",{"_index":222,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/entities/user.entity.ts:18",{"_index":218,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/entities/user.entity.ts:21",{"_index":221,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/entities/user.entity.ts:25",{"_index":217,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/entities/user.entity.ts:9",{"_index":220,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/main.ts",{"_index":235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":286,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":289,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":291,"title":{},"body":{"index.html":{}}}],["started",{"_index":268,"title":{"index.html":{}},"body":{}}],["statements",{"_index":229,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":117,"title":{},"body":{"entities/AuthEntity.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["summary",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["support",{"_index":303,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":304,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":239,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":238,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":294,"title":{},"body":{"index.html":{}}}],["test:covcontact",{"_index":297,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":296,"title":{},"body":{"index.html":{}}}],["tests",{"_index":293,"title":{},"body":{"index.html":{}}}],["this.authservice.getall",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(logindto",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerdto",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.password",{"_index":132,"title":{},"body":{"entities/AuthEntity.html":{}}}],["this.userrepository.find",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.findoneby",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.save(user",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"entities/UserEntity.html":{}}}],["true})@joincolumn",{"_index":216,"title":{},"body":{"entities/UserEntity.html":{}}}],["type",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/AuthEntity.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["typeorm",{"_index":125,"title":{},"body":{"entities/AuthEntity.html":{},"injectables/AuthService.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["unit",{"_index":292,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":312,"title":{},"body":{"properties.html":{}}}],["updated_at",{"_index":110,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn",{"_index":120,"title":{},"body":{"entities/AuthEntity.html":{},"entities/UserEntity.html":{}}}],["user",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["user'})@post('register",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.auth",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":213,"title":{},"body":{"entities/UserEntity.html":{}}}],["user.username",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity",{"_index":80,"title":{"entities/UserEntity.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["username",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["userrepository",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["users'})@get",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["validator",{"_index":187,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["version",{"_index":309,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":287,"title":{},"body":{"index.html":{}}}],["z",{"_index":192,"title":{},"body":{"classes/RegisterDto.html":{}}}],["za",{"_index":201,"title":{},"body":{"classes/RegisterDto.html":{}}}],["zoom",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { AuthModule } from './auth/auth.module'\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST,\n      port: parseInt(process.env.DB_PORT),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABASE,\n      entities: ['dist/**/*.entity.js'],\n      synchronize: true,\n    }),\n    AuthModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllUsers\n                            \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all existing users'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Login'})@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Register new user'})@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerDto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { LoginDto } from 'src/dtos/login.dto'\nimport { RegisterDto } from 'src/dtos/register.dto'\nimport { UserEntity } from 'src/entities/user.entity'\nimport { Body, Controller, Get, Post } from '@nestjs/common'\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\nimport { AuthService } from './auth.service'\n\n@ApiTags('Authentication')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @ApiOperation({ summary: 'Register new user' })\n  @Post('register')\n  register(@Body() registerDto: RegisterDto): Promise {\n    return this.authService.register(registerDto)\n  }\n\n  @ApiOperation({ summary: 'Login' })\n  @Post('login')\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto)\n  }\n\n  @ApiOperation({ summary: 'Get all existing users' })\n  @Get()\n  getAllUsers(): Promise {\n    return this.authService.getAll()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthEntity.html":{"url":"entities/AuthEntity.html","title":"entity - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/auth.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/auth.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt'\nimport {\n    BeforeInsert, BeforeUpdate, Column, CreateDateColumn, Entity, PrimaryGeneratedColumn,\n    UpdateDateColumn\n} from 'typeorm'\n\n@Entity()\nexport class AuthEntity {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column()\n  password: string\n\n  @CreateDateColumn()\n  created_at: Date\n\n  @UpdateDateColumn()\n  updated_at: Date\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  async hashPassword(password: string): Promise {\n    const salt = await bcrypt.genSalt()\n    this.password = await bcrypt.hash(password || this.password, salt)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthEntity } from 'src/entities/auth.entity'\nimport { UserEntity } from 'src/entities/user.entity'\nimport { Module } from '@nestjs/common'\nimport { TypeOrmModule } from '@nestjs/typeorm'\nimport { AuthController } from './auth.controller'\nimport { AuthService } from './auth.service'\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity, AuthEntity])],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, authRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerDto: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerDto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt'\nimport { LoginDto } from 'src/dtos/login.dto'\nimport { RegisterDto } from 'src/dtos/register.dto'\nimport { AuthEntity } from 'src/entities/auth.entity'\nimport { UserEntity } from 'src/entities/user.entity'\nimport { Repository } from 'typeorm'\nimport { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(AuthEntity)\n    private readonly authRepository: Repository,\n  ) {}\n\n  async register(registerDto: RegisterDto): Promise {\n    const user = new UserEntity()\n    user.username = registerDto.username\n    user.email = registerDto.email\n    const auth = new AuthEntity()\n    auth.password = registerDto.password\n    user.auth = auth\n    const result = await this.userRepository.save(user)\n    return result\n  }\n\n  async login(loginDto: LoginDto): Promise {\n    const findUser = await this.userRepository.findOneBy({\n      email: loginDto.email,\n    })\n    if (!findUser) {\n      throw new NotFoundException()\n    }\n    const hashedPassword = findUser.auth.password\n    const comparePassword = await bcrypt.compare(\n      loginDto.password,\n      hashedPassword,\n    )\n    if (!comparePassword) {\n      throw new UnauthorizedException()\n    }\n    return findUser\n  }\n\n  async getAll(): Promise {\n    return await this.userRepository.find()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string\n\n  @ApiProperty()\n  @IsString()\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dtos/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(4)@MaxLength(20)@Matches(/(?=.*[A-Z])/, {message: 'password must contain atleast one capital letter'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/register.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(4)@MaxLength(20)@Matches(/^[a-zA-Z\\-]+$/, {message: 'username should Not have any digits'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dtos/register.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, Matches, MaxLength, MinLength } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class RegisterDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string\n\n  @ApiProperty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  @Matches(/^[a-zA-Z\\-]+$/, { message: 'username should Not have any digits' })\n  username: string\n\n  @ApiProperty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(20)\n  @Matches(/(?=.*[A-Z])/, {\n    message: 'password must contain atleast one capital letter',\n  })\n  password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                created_at\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                updated_at\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, user => user.id, {eager: true, cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n    Column, CreateDateColumn, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn, UpdateDateColumn\n} from 'typeorm'\nimport { AuthEntity } from './auth.entity'\n\n@Entity()\nexport class UserEntity {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column()\n  email: string\n\n  @Column()\n  username: string\n\n  @CreateDateColumn()\n  created_at: Date\n\n  @UpdateDateColumn()\n  updated_at: Date\n\n  @OneToOne(() => AuthEntity, (user) => user.id, { eager: true, cascade: true })\n  @JoinColumn()\n  auth: AuthEntity\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dtos/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/entities/auth.entity.ts\n            \n            entity\n            AuthEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mysql2 : ^2.3.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.11\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCerberus\n\nDescription\nUser authentication API with Nest framework\nInstallation\n$ npm installremove example from .env example to access .env files\nRunning the app\n# development\n$ npm run start\n# watch mode\n$ npm run start:dev\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n# e2e tests\n$ npm run test:e2e\n# test coverage\n$ npm run test:covContact Me\n\nAuthor - Mehran Shahbaz\nEmail - mehranfmpx@gmail.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : User authentication API\n        \n            License : UNLICENSED\n        \n            Author : Mehran Shahbaz\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
